/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TimeLockMultiSigWallet,
  TimeLockMultiSigWalletInterface,
} from "../../contracts/TimeLockMultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Execution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "NewDelay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Revocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Submission",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAXIMUM_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "transactionIdArray",
        type: "uint256[]",
      },
    ],
    name: "batchConfirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "transactionIdArray",
        type: "uint256[]",
      },
    ],
    name: "batchExecuteTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmations",
    outputs: [
      {
        internalType: "address[]",
        name: "_confirmations",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_transactionIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "replaceOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "submitTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161280338038061280383398101604081905261002f91610309565b825182603282111580156100435750818111155b801561004e57508015155b801561005957508115155b6100aa5760405162461bcd60e51b815260206004820152601960248201527f6572726f723a2076616c6964526571756972656d656e7428290000000000000060448201526064015b60405180910390fd5b60018310156100fb5760405162461bcd60e51b815260206004820181905260248201527f44656c6179206d75737420657863656564206d696e696d756d2064656c61792e60448201526064016100a1565b6213c68083111561015a5760405162461bcd60e51b8152602060048201526024808201527f44656c6179206d757374206e6f7420657863656564206d6178696d756d2064656044820152633630bc9760e11b60648201526084016100a1565b60005b8551811015610237576003600087838151811061017c5761017c6103eb565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161580156101dc575060006001600160a01b03168682815181106101c8576101c86103eb565b60200260200101516001600160a01b031614155b6101e557600080fd5b6001600360008884815181106101fd576101fd6103eb565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161015d565b50845161024b90600490602088019061025d565b50505060059190915560005550610401565b8280548282559060005260206000209081019282156102b2579160200282015b828111156102b257825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061027d565b506102be9291506102c2565b5090565b5b808211156102be57600081556001016102c3565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461030457600080fd5b919050565b60008060006060848603121561031e57600080fd5b83516001600160401b0381111561033457600080fd5b8401601f8101861361034557600080fd5b80516001600160401b0381111561035e5761035e6102d7565b604051600582901b90603f8201601f191681016001600160401b038111828210171561038c5761038c6102d7565b6040529182526020818401810192908101898411156103aa57600080fd5b6020850194505b838510156103d0576103c2856102ed565b8152602094850194016103b1565b50602088015160409098015190999798509695505050505050565b634e487b7160e01b600052603260045260246000fd5b6123f3806104106000396000f3fe6080604052600436106101c65760003560e01c8063a0e67e2b116100f7578063c642747411610095578063e177246e11610064578063e177246e146105a3578063e20056e6146105c3578063ee22610b146105e3578063ffa1ad741461060357610209565b8063c642747414610538578063d306b9da14610558578063d74f8edd14610578578063dc8452cd1461058d57610209565b8063b5dc40c3116100d1578063b5dc40c3146104c2578063b77bf600146104e2578063ba51a6df146104f8578063c01a8c841461051857610209565b8063a0e67e2b1461045e578063a8abe69a14610480578063b1b43ae5146104ad57610209565b80635474152511610164578063784547a71161013e578063784547a7146103d65780637d645fab146103f65780638b51d13f1461040d5780639ace38c21461042d57610209565b806354741525146103725780636a42b8f8146103a05780637065cb48146103b657610209565b806320ea8d86116101a057806320ea8d86146102b757806326f5e2b5146102d75780632f54bf6e146102f75780633411c81c1461033757610209565b8063025e7c2714610215578063150b7a0214610252578063173825d91461029757610209565b366102095734156102075760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a25b005b34801561020757600080fd5b34801561022157600080fd5b50610235610230366004611c11565b61061b565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561025e57600080fd5b5061027e61026d366004611c46565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610249565b3480156102a357600080fd5b506102076102b2366004611ce1565b610645565b3480156102c357600080fd5b506102076102d2366004611c11565b610800565b3480156102e357600080fd5b506102076102f2366004611d42565b610935565b34801561030357600080fd5b50610327610312366004611ce1565b60036020526000908152604090205460ff1681565b6040519015158152602001610249565b34801561034357600080fd5b50610327610352366004611df1565b600260209081526000928352604080842090915290825290205460ff1681565b34801561037e57600080fd5b5061039261038d366004611e2d565b61096f565b604051908152602001610249565b3480156103ac57600080fd5b5061039260005481565b3480156103c257600080fd5b506102076103d1366004611ce1565b6109e2565b3480156103e257600080fd5b506103276103f1366004611c11565b610bbf565b34801561040257600080fd5b506103926213c68081565b34801561041957600080fd5b50610392610428366004611c11565b610c53565b34801561043957600080fd5b5061044d610448366004611c11565b610ccf565b604051610249959493929190611ea7565b34801561046a57600080fd5b50610473610d97565b6040516102499190611ee2565b34801561048c57600080fd5b506104a061049b366004611f2e565b610df9565b6040516102499190611f74565b3480156104b957600080fd5b50610392600181565b3480156104ce57600080fd5b506104736104dd366004611c11565b610f7b565b3480156104ee57600080fd5b5061039260065481565b34801561050457600080fd5b50610207610513366004611c11565b61113d565b34801561052457600080fd5b50610207610533366004611c11565b61120c565b34801561054457600080fd5b50610392610553366004611fac565b611355565b34801561056457600080fd5b50610207610573366004611d42565b611374565b34801561058457600080fd5b50610392603281565b34801561059957600080fd5b5061039260055481565b3480156105af57600080fd5b506102076105be366004611c11565b6113aa565b3480156105cf57600080fd5b506102076105de36600461205e565b6114b4565b3480156105ef57600080fd5b506102076105fe366004611c11565b611698565b34801561060f57600080fd5b50610392630134647c81565b6004818154811061062b57600080fd5b6000918252602090912001546001600160a01b0316905081565b33301461066d5760405162461bcd60e51b815260040161066490612088565b60405180910390fd5b6001600160a01b038116600090815260036020526040902054819060ff166106a75760405162461bcd60e51b8152600401610664906120bf565b6001600160a01b0382166000908152600360205260408120805460ff191690555b6004546106d7906001906120fb565b81101561079c57826001600160a01b0316600482815481106106fb576106fb612114565b6000918252602090912001546001600160a01b0316036107945760048054610725906001906120fb565b8154811061073557610735612114565b600091825260209091200154600480546001600160a01b03909216918390811061076157610761612114565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061079c565b6001016106c8565b506004546107ac906001906120fb565b60055411156107c8576004546107c890610513906001906120fb565b6040516001600160a01b038316907f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9090600090a25050565b3360008181526003602052604090205460ff1661082f5760405162461bcd60e51b8152600401610664906120bf565b60008281526002602090815260408083203380855292529091205483919060ff1661088f5760405162461bcd60e51b815260206004820152601060248201526f1a5cc81b9bdd0818dbdb999a5c9b595960821b6044820152606401610664565b600084815260016020526040902060030154849060ff16156108e65760405162461bcd60e51b815260206004820152601060248201526f185b1c9958591e48195e1958dd5d195960821b6044820152606401610664565b6000858152600260209081526040808320338085529252808320805460ff191690555187927ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e991a35050505050565b60005b815181101561096b5761096382828151811061095657610956612114565b6020026020010151611698565b600101610938565b5050565b6000805b6006548110156109db5783801561099c575060008181526001602052604090206003015460ff16155b806109c057508280156109c0575060008181526001602052604090206003015460ff165b156109d3576109d060018361212a565b91505b600101610973565b5092915050565b333014610a015760405162461bcd60e51b815260040161066490612088565b6001600160a01b038116600090815260036020526040902054819060ff1615610a5f5760405162461bcd60e51b815260206004820152601060248201526f34b99030b63932b0b23c9037bbb732b960811b6044820152606401610664565b816001600160a01b038116610aaf5760405162461bcd60e51b81526020600482015260166024820152755f61646472657373203d3d206164647265737328302960501b6044820152606401610664565b600454610abd90600161212a565b60055460328211158015610ad15750818111155b8015610adc57508015155b8015610ae757508115155b610b2f5760405162461bcd60e51b81526020600482015260196024820152786572726f723a2076616c6964526571756972656d656e74282960381b6044820152606401610664565b6001600160a01b038516600081815260036020526040808220805460ff1916600190811790915560048054918201815583527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b03191684179055517ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d9190a25050505050565b600080805b600454811015610c495760008481526002602052604081206004805491929184908110610bf357610bf3612114565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610c2e57610c2b60018361212a565b91505b6005548203610c41575060019392505050565b600101610bc4565b5060009392505050565b6000805b600454811015610cc95760008381526002602052604081206004805491929184908110610c8657610c86612114565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610cc157610cbe60018361212a565b91505b600101610c57565b50919050565b60016020819052600091825260409091208054918101546002820180546001600160a01b0390941693919291610d049061213d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d309061213d565b8015610d7d5780601f10610d5257610100808354040283529160200191610d7d565b820191906000526020600020905b815481529060010190602001808311610d6057829003601f168201915b505050506003830154600490930154919260ff1691905085565b60606004805480602002602001604051908101604052809291908181526020018280548015610def57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dd1575b5050505050905090565b606060006006546001600160401b03811115610e1757610e17611cfc565b604051908082528060200260200182016040528015610e40578160200160208202803683370190505b5090506000805b600654811015610ecd57858015610e70575060008181526001602052604090206003015460ff16155b80610e945750848015610e94575060008181526001602052604090206003015460ff165b15610ec55780838381518110610eac57610eac612114565b6020908102919091010152610ec260018361212a565b91505b600101610e47565b610ed788886120fb565b6001600160401b03811115610eee57610eee611cfc565b604051908082528060200260200182016040528015610f17578160200160208202803683370190505b5093508790505b86811015610f7057828181518110610f3857610f38612114565b6020026020010151848983610f4d91906120fb565b81518110610f5d57610f5d612114565b6020908102919091010152600101610f1e565b505050949350505050565b6004546060906000906001600160401b03811115610f9b57610f9b611cfc565b604051908082528060200260200182016040528015610fc4578160200160208202803683370190505b5090506000805b6004548110156110985760008581526002602052604081206004805491929184908110610ffa57610ffa612114565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615611090576004818154811061103a5761103a612114565b9060005260206000200160009054906101000a90046001600160a01b031683838151811061106a5761106a612114565b6001600160a01b039092166020928302919091019091015261108d60018361212a565b91505b600101610fcb565b816001600160401b038111156110b0576110b0611cfc565b6040519080825280602002602001820160405280156110d9578160200160208202803683370190505b509350600090505b81811015611135578281815181106110fb576110fb612114565b602002602001015184828151811061111557611115612114565b6001600160a01b03909216602092830291909101909101526001016110e1565b505050919050565b33301461115c5760405162461bcd60e51b815260040161066490612088565b60045481603282118015906111715750818111155b801561117c57508015155b801561118757508115155b6111cf5760405162461bcd60e51b81526020600482015260196024820152786572726f723a2076616c6964526571756972656d656e74282960381b6044820152606401610664565b60058390556040518381527fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a9060200160405180910390a1505050565b3360008181526003602052604090205460ff1661123b5760405162461bcd60e51b8152600401610664906120bf565b60008281526001602052604090205482906001600160a01b03166112a15760405162461bcd60e51b815260206004820152601b60248201527f7472616e73616374696f6e4964206973206e6f742065786973747300000000006044820152606401610664565b60008381526002602090815260408083203380855292529091205484919060ff16156113035760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e4818dbdb999a5c9b5959607a1b6044820152606401610664565b6000858152600260209081526040808320338085529252808320805460ff191660011790555187927f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef91a35050505050565b60006113628484846119bf565b905061136d8161120c565b9392505050565b60005b815181101561096b576113a282828151811061139557611395612114565b602002602001015161120c565b600101611377565b3330146113c95760405162461bcd60e51b815260040161066490612088565b600181101561141a5760405162461bcd60e51b815260206004820181905260248201527f44656c6179206d75737420657863656564206d696e696d756d2064656c61792e6044820152606401610664565b6213c6808111156114795760405162461bcd60e51b8152602060048201526024808201527f44656c6179206d757374206e6f7420657863656564206d6178696d756d2064656044820152633630bc9760e11b6064820152608401610664565b60008190556040518181527f948b1f6a42ee138b7e34058ba85a37f716d55ff25ff05a763f15bed6a04c8d2c9060200160405180910390a150565b3330146114d35760405162461bcd60e51b815260040161066490612088565b6001600160a01b038216600090815260036020526040902054829060ff1661150d5760405162461bcd60e51b8152600401610664906120bf565b6001600160a01b038216600090815260036020526040902054829060ff161561156b5760405162461bcd60e51b815260206004820152601060248201526f34b99030b63932b0b23c9037bbb732b960811b6044820152606401610664565b60005b6004548110156115fe57846001600160a01b03166004828154811061159557611595612114565b6000918252602090912001546001600160a01b0316036115f65783600482815481106115c3576115c3612114565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506115fe565b60010161156e565b506001600160a01b03808516600081815260036020526040808220805460ff1990811690915593871682528082208054909416600117909355915190917f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9091a26040516001600160a01b038416907ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d90600090a250505050565b3360008181526003602052604090205460ff166116c75760405162461bcd60e51b8152600401610664906120bf565b60008281526002602090815260408083203380855292529091205483919060ff166117275760405162461bcd60e51b815260206004820152601060248201526f1a5cc81b9bdd0818dbdb999a5c9b595960821b6044820152606401610664565b600084815260016020526040902060030154849060ff161561177e5760405162461bcd60e51b815260206004820152601060248201526f185b1c9958591e48195e1958dd5d195960821b6044820152606401610664565b60008054868252600160205260409091206004015461179d919061212a565b4210156118125760405162461bcd60e51b815260206004820152603f60248201527f5468652074696d65206973206e6f742075702c2074686520636f6d6d616e642060448201527f63616e6e6f742062652065786563757465642074656d706f726172696c7921006064820152608401610664565b600085815260016020526040902060040154611832906213c6809061212a565b4211156118a9576040805162461bcd60e51b81526020600482015260248101919091527f546865206d6178696d756d20657865637574696f6e2074696d6520686173206260448201527f65656e2065786365656465642c20756e61626c6520746f2065786563757465216064820152608401610664565b6118b285610bbf565b156119b857600085815260016020819052604080832060038101805460ff19168417905580549281015491519093926001600160a01b031691906118fa906002860190612171565b60006040518083038185875af1925050503d8060008114611937576040519150601f19603f3d011682016040523d82523d6000602084013e61193c565b606091505b5050905080156119765760405187907f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed7590600090a26119b5565b61197f87611af8565b60405160200161198f91906121e6565b60408051601f198184030181529082905262461bcd60e51b825261066491600401612232565b50505b5050505050565b6000836001600160a01b038116611a115760405162461bcd60e51b81526020600482015260166024820152755f61646472657373203d3d206164647265737328302960501b6044820152606401610664565b6006546040805160a0810182526001600160a01b038881168252602080830189815283850189815260006060860181905242608087015287815260019384905295909520845181546001600160a01b031916941693909317835551908201559151929450916002820190611a859082612291565b50606082015160038201805460ff19169115159190911790556080909101516004909101556006805460019190600090611ac090849061212a565b909155505060405182907fc0ba8fe4b176c1714197d43b9cc6bcf797a4a7461c5fe8d0ef6e184ae7601e5190600090a2509392505050565b606081600003611b1f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611b495780611b338161234f565b9150611b429050600a8361237e565b9150611b23565b6000816001600160401b03811115611b6357611b63611cfc565b6040519080825280601f01601f191660200182016040528015611b8d576020820181803683370190505b5090506000611b9d6001846120fb565b90508593505b8315611c0857611bb4600a85612392565b611bbf90603061212a565b60f81b8282611bcd816123a6565b935081518110611bdf57611bdf612114565b60200101906001600160f81b031916908160001a905350611c01600a8561237e565b9350611ba3565b50949350505050565b600060208284031215611c2357600080fd5b5035919050565b80356001600160a01b0381168114611c4157600080fd5b919050565b600080600080600060808688031215611c5e57600080fd5b611c6786611c2a565b9450611c7560208701611c2a565b93506040860135925060608601356001600160401b03811115611c9757600080fd5b8601601f81018813611ca857600080fd5b80356001600160401b03811115611cbe57600080fd5b886020828401011115611cd057600080fd5b959894975092955050506020019190565b600060208284031215611cf357600080fd5b61136d82611c2a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611d3a57611d3a611cfc565b604052919050565b600060208284031215611d5457600080fd5b81356001600160401b03811115611d6a57600080fd5b8201601f81018413611d7b57600080fd5b80356001600160401b03811115611d9457611d94611cfc565b8060051b611da460208201611d12565b91825260208184018101929081019087841115611dc057600080fd5b6020850194505b83851015611de657843580835260209586019590935090910190611dc7565b979650505050505050565b60008060408385031215611e0457600080fd5b82359150611e1460208401611c2a565b90509250929050565b80358015158114611c4157600080fd5b60008060408385031215611e4057600080fd5b611e4983611e1d565b9150611e1460208401611e1d565b60005b83811015611e72578181015183820152602001611e5a565b50506000910152565b60008151808452611e93816020860160208601611e57565b601f01601f19169290920160200192915050565b60018060a01b038616815284602082015260a060408201526000611ece60a0830186611e7b565b931515606083015250608001529392505050565b602080825282518282018190526000918401906040840190835b81811015611f235783516001600160a01b0316835260209384019390920191600101611efc565b509095945050505050565b60008060008060808587031215611f4457600080fd5b8435935060208501359250611f5b60408601611e1d565b9150611f6960608601611e1d565b905092959194509250565b602080825282518282018190526000918401906040840190835b81811015611f23578351835260209384019390920191600101611f8e565b600080600060608486031215611fc157600080fd5b611fca84611c2a565b92506020840135915060408401356001600160401b03811115611fec57600080fd5b8401601f81018613611ffd57600080fd5b80356001600160401b0381111561201657612016611cfc565b612029601f8201601f1916602001611d12565b81815287602083850101111561203e57600080fd5b816020840160208301376000602083830101528093505050509250925092565b6000806040838503121561207157600080fd5b61207a83611c2a565b9150611e1460208401611c2a565b6020808252601b908201527f6d73672e73656e64657220213d20616464726573732874686973290000000000604082015260600190565b6020808252600c908201526b34b9903737ba1037bbb732b960a11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561210e5761210e6120e5565b92915050565b634e487b7160e01b600052603260045260246000fd5b8082018082111561210e5761210e6120e5565b600181811c9082168061215157607f821691505b602082108103610cc957634e487b7160e01b600052602260045260246000fd5b600080835461217f8161213d565b60018216801561219657600181146121ab576121db565b60ff19831686528115158202860193506121db565b86600052602060002060005b838110156121d3578154888201526001909101906020016121b7565b505081860193505b509195945050505050565b7102a3432903a3930b739b0b1ba34b7b724b2160751b815260008251612213816012850160208701611e57565b67103330b4b632b21760c11b6012939091019283015250601a01919050565b60208152600061136d6020830184611e7b565b601f82111561228c57806000526020600020601f840160051c8101602085101561226c5750805b601f840160051c820191505b818110156119b85760008155600101612278565b505050565b81516001600160401b038111156122aa576122aa611cfc565b6122be816122b8845461213d565b84612245565b6020601f8211600181146122f257600083156122da5750848201515b600019600385901b1c1916600184901b1784556119b8565b600084815260208120601f198516915b828110156123225787850151825560209485019460019092019101612302565b50848210156123405786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060018201612361576123616120e5565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261238d5761238d612368565b500490565b6000826123a1576123a1612368565b500690565b6000816123b5576123b56120e5565b50600019019056fea2646970667358221220ed9d0adf39f2e1176a276c893a9925a1d3ecbcda84e985a54324601fbd99523d64736f6c634300081c0033";

type TimeLockMultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeLockMultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeLockMultiSigWallet__factory extends ContractFactory {
  constructor(...args: TimeLockMultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owners: AddressLike[],
    _required: BigNumberish,
    _delay: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owners,
      _required,
      _delay,
      overrides || {}
    );
  }
  override deploy(
    _owners: AddressLike[],
    _required: BigNumberish,
    _delay: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owners, _required, _delay, overrides || {}) as Promise<
      TimeLockMultiSigWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TimeLockMultiSigWallet__factory {
    return super.connect(runner) as TimeLockMultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeLockMultiSigWalletInterface {
    return new Interface(_abi) as TimeLockMultiSigWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TimeLockMultiSigWallet {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TimeLockMultiSigWallet;
  }
}
