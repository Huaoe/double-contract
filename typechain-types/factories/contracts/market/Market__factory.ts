/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Market, MarketInterface } from "../../../contracts/market/Market";

const _abi = [
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "CancelLendOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maxEndTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minDuration",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IMarket.OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "CreateLendOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "FulfillOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldPendingOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newPendingOwner",
        type: "address",
      },
    ],
    name: "NewPendingOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOfFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "balanceOfRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "cancelLendOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "paymentTokens",
        type: "address[]",
      },
    ],
    name: "claimFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "paymentTokens",
        type: "address[]",
      },
    ],
    name: "claimRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maxEndTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "minDuration",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "createLendOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maxEndTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "minDuration",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "enum IMarket.OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "createPrivateLendOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "durationId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "duration",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "fulfillOrderNow",
    outputs: [
      {
        internalType: "uint256",
        name: "tid",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "getLendOrder",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "maxEndTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "enum IMarket.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "enum IMarket.PaymentType",
            name: "paymentType",
            type: "uint8",
          },
        ],
        internalType: "struct IMarket.Lending",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "getPaymentNormal",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct IMarket.PaymentNormal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "getRenterOfPrivateLendOrder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "isLendOrderValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPausing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxIndate",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doNftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oNftId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maxEndTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "minDuration",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "mintAndCreateLendOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doNftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oNftId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maxEndTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "minDuration",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "enum IMarket.OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "mintAndCreatePrivateLendOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "beneficiary_",
        type: "address",
      },
    ],
    name: "setMarketBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "max_",
        type: "uint64",
      },
    ],
    name: "setMaxIndate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pause_",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pendingOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506134ef8061001f6000396000f3fe6080604052600436106101e35760003560e01c8063a18087fd11610102578063e30c397811610095578063ef4389e811610064578063ef4389e814610605578063f2fde38b1461064b578063f5e241bb1461066b578063f851a4401461068b57600080fd5b8063e30c397814610578578063e389bc1014610598578063ebbc4965146105d0578063ec005b67146105e557600080fd5b8063bedb86fb116100d1578063bedb86fb146104fc578063bf59a4571461051c578063c8e2c9ee14610543578063ced72f871461056357600080fd5b8063a18087fd1461046f578063ac9650d81461048f578063b23bc40e146104bc578063b774b601146104dc57600080fd5b8063434aee631161017a578063715018a611610149578063715018a6146103ca5780638da5cb5b146103df57806394bdb442146103ff5780639815becf1461044257600080fd5b8063434aee631461034a578063485cc9551461036a57806369fe0e2d1461038a578063704b6c02146103aa57600080fd5b806316e5e29b116101b657806316e5e29b1461028157806325725475146102a157806338af3eed146102e5578063430e70501461031d57600080fd5b806302bb4bbe146101e8578063077620331461020e5780630d34b79c1461023057806312aa48e214610261575b600080fd5b6101fb6101f6366004612cc9565b6106ab565b6040519081526020015b60405180910390f35b34801561021a57600080fd5b5061022e610229366004612d28565b610ab7565b005b34801561023c57600080fd5b50600a5461025190600160401b900460ff1681565b6040519015158152602001610205565b34801561026d57600080fd5b5061022e61027c366004612dc3565b610b7b565b34801561028d57600080fd5b5061022e61029c366004612dc3565b610c38565b3480156102ad57600080fd5b506102c16102bc366004612e33565b610c75565b6040805182516001600160a01b031681526020928301519281019290925201610205565b3480156102f157600080fd5b50600854610305906001600160a01b031681565b6040516001600160a01b039091168152602001610205565b34801561032957600080fd5b5061033d610338366004612e33565b610cc6565b6040516102059190612e99565b34801561035657600080fd5b5061022e610365366004612e33565b610e0d565b34801561037657600080fd5b5061022e610385366004612f58565b610f14565b34801561039657600080fd5b5061022e6103a5366004612f91565b611072565b3480156103b657600080fd5b5061022e6103c5366004612faa565b6110f6565b3480156103d657600080fd5b5061022e611189565b3480156103eb57600080fd5b50600054610305906001600160a01b031681565b34801561040b57600080fd5b5061030561041a366004612e33565b6001600160a01b03918216600090815260046020908152604080832093835292905220541690565b34801561044e57600080fd5b506101fb61045d366004612faa565b60076020526000908152604090205481565b34801561047b57600080fd5b5061025161048a366004612e33565b6112ad565b34801561049b57600080fd5b506104af6104aa366004613019565b6113a1565b604051610205919061305a565b3480156104c857600080fd5b5061022e6104d73660046130f7565b6114ee565b3480156104e857600080fd5b5061022e6104f7366004613019565b611550565b34801561050857600080fd5b5061022e610517366004613122565b611723565b34801561052857600080fd5b50600a54610251906901000000000000000000900460ff1681565b34801561054f57600080fd5b5061022e61055e36600461313f565b6117f3565b34801561056f57600080fd5b506009546101fb565b34801561058457600080fd5b50600154610305906001600160a01b031681565b3480156105a457600080fd5b50600a546105b8906001600160401b031681565b6040516001600160401b039091168152602001610205565b3480156105dc57600080fd5b5061022e611a3b565b3480156105f157600080fd5b5061022e610600366004612faa565b611b51565b34801561061157600080fd5b506101fb610620366004612f58565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b34801561065757600080fd5b5061022e610666366004612faa565b611b9d565b34801561067757600080fd5b5061022e610686366004612d28565b611c06565b34801561069757600080fd5b50600254610305906001600160a01b031681565b600a54600090600160401b900460ff16156106e15760405162461bcd60e51b81526004016106d890613193565b60405180910390fd5b6106e9611c45565b6106f386866112ad565b61072f5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037b93232b960991b60448201526064016106d8565b6001600160a01b038616600090815260036020908152604080832088845290915290206001600482015460ff16600281111561076d5761076d612e5f565b036107d7576001600160a01b0387811660009081526004602090815260408083208a84529091529020541633146107d75760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b2103932b73a32b960911b60448201526064016106d8565b600060016107ee6001600160401b038716426131cd565b6107f891906131e0565b60038301549091506001600160401b039081169082161115610824575060038101546001600160401b03165b604051638bb126a760e01b8152600481018790526000906001600160a01b038a1690638bb126a7906024016040805180830381865afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f91906131f3565b915050806001600160401b0316826001600160401b031611156108b0578091505b426001600160401b0383811690831614806108da575060038401546001600160401b038481169116145b61093f5760038401546001600160401b03600160401b9091048116908816101561093f5760405162461bcd60e51b8152602060048201526016602482015275323ab930ba34b7b7101e1036b4b7223ab930ba34b7b760511b60448201526064016106d8565b61094b8a8a8386611c7d565b5050604051630430461560e21b8152600481018c9052602481018b90526001600160401b038085166044830152861660648201523360848201526001600160a01b0389811660a48301528d1692506310c11854915060c4016020604051808303816000875af11580156109c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e69190613222565b6001600160a01b03808c1660008181526005602090815260408083208f845282529182902089546001820154825485513381529288169483019490945293810194909452606084018f90526001600160401b038088166080860152891660a085015260c084019290925260e08301859052909216610100820152919650907ff8ce95efc95f64de1eca0db3354afad7c88704a1f7e64ba969056d449a1c0b10906101200160405180910390a15050505050610aae600160008051602061349a83398151915255565b95945050505050565b600a54600160401b900460ff1615610ae15760405162461bcd60e51b81526004016106d890613193565b6001600160a01b0380891660008181526004602090815260408083208c8452825280832080548689166001600160a01b0319918216179091558151808301835289871681528084018b8152958552600584528285208e86529093529083209151825495169416939093178355905160019290920191909155610b719089908990899089908990899088908a6120d9565b5050505050505050565b600a54600160401b900460ff1615610ba55760405162461bcd60e51b81526004016106d890613193565b6001600160a01b0380871660008181526004602090815260408083208a8452825280832080546001600160a01b0319908116909155815180830183528787168152808401898152958552600584528285208c86529093529083209151825495169416939093178355905160019290920191909155610c309087908790879087908790879080806120d9565b505050505050565b610c40611c45565b6000610c4d87878761261f565b9050610c5d878287878787610b7b565b50610c30600160008051602061349a83398151915255565b604080518082018252600080825260209182018190526001600160a01b0385811682526005835283822085835283529083902083518085019094528054909116835260010154908201525b92915050565b610d146040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529060e082019081526020016000905290565b6001600160a01b03808416600090815260036020818152604080842087855282529283902083516101208101855281548616815260018201549095169185019190915260028082015493850193909352908101546001600160401b038082166060860152600160401b820481166080860152600160801b8204811660a0860152600160c01b9091041660c08401526004810154909160e084019160ff1690811115610dc157610dc1612e5f565b6002811115610dd257610dd2612e5f565b81526004820154602090910190610100900460ff168015610df557610df5612e5f565b8015610e0357610e03612e5f565b9052509392505050565b600a54600160401b900460ff1615610e375760405162461bcd60e51b81526004016106d890613193565b610e423383836128d3565b6001600160a01b0382166000818152600360208181526040808420868552825280842080546001600160a01b031990811682556001808301805483169055600283018790559482018690556004918201805461ffff191690558686526005845282862088875284528286208054821681559094018590558585528252808420868552825292839020805490921690915581513381529081019290925281018290527fd683d5e080429307176d202675b21464dc43b9ab5339355dabb01bebee4008be9060600160405180910390a15050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b0316600081158015610f595750825b90506000826001600160401b03166001148015610f755750303b155b905081158015610f83575080155b15610fa15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610fcb57845460ff60401b1916600160401b1785555b610fd3612a95565b6110068787600080546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b600a805467ffffffffffffffff19166301e133801790556109c4600955831561106957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6002546001600160a01b031633148061109557506000546001600160a01b031633145b6110b15760405162461bcd60e51b81526004016106d89061323b565b6127108111156110f15760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b60448201526064016106d8565b600955565b6000546001600160a01b031633146111205760405162461bcd60e51b81526004016106d89061325e565b6002546040517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc9161115f916001600160a01b03909116908490613281565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146111b35760405162461bcd60e51b81526004016106d89061325e565b600080546040517f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364926111ef926001600160a01b031691613281565b60405180910390a16002546040517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc91611237916001600160a01b0390911690600090613281565b60405180910390a16001546040517fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b9161127f916001600160a01b0390911690600090613281565b60405180910390a1600080546001600160a01b03199081169091556001805482169055600280549091169055565b6001600160a01b03821660009081526003602090815260408083208484529091528120600a54600160401b900460ff16156112ec576000915050610cc0565b6000816002015411801561130e57506003810154426001600160401b03909116115b80156113995750604051633d46b81960e01b8152600481018490526001600160a01b03851690633d46b81990602401602060405180830381865afa15801561135a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137e919061329b565b6003820154600160c01b90046001600160401b039081169116145b949350505050565b6060816001600160401b038111156113bb576113bb6132b8565b6040519080825280602002602001820160405280156113ee57816020015b60608152602001906001900390816113d95790505b50905060005b828110156114e75760008030868685818110611412576114126132ce565b905060200281019061142491906132e4565b60405161143292919061332a565b6000604051808303816000865af19150503d806000811461146f576040519150601f19603f3d011682016040523d82523d6000602084013e611474565b606091505b5091509150816114bf5760405162461bcd60e51b8152602060048201526016602482015275135d5b1d1a58d85b1b0e8818d85b1b0819985a5b195960521b60448201526064016106d8565b808484815181106114d2576114d26132ce565b602090810291909101015250506001016113f4565b5092915050565b6002546001600160a01b031633148061151157506000546001600160a01b031633145b61152d5760405162461bcd60e51b81526004016106d89061323b565b600a805467ffffffffffffffff19166001600160401b0392909216919091179055565b600a54600160401b900460ff161561157a5760405162461bcd60e51b81526004016106d890613193565b611582611c45565b6008546001600160a01b031633146115ce5760405162461bcd60e51b815260206004820152600f60248201526e6e6f742062656e656669636961727960881b60448201526064016106d8565b60005b81811015611707576000600760008585858181106115f1576115f16132ce565b90506020020160208101906116069190612faa565b6001600160a01b03168152602081019190915260400160002054905080156116fe57600084848481811061163c5761163c6132ce565b90506020020160208101906116519190612faa565b6001600160a01b03160361167a57600854611675906001600160a01b031682612aa7565b6116b6565b6116b684848481811061168f5761168f6132ce565b90506020020160208101906116a49190612faa565b6008546001600160a01b031683612b45565b6000600760008686868181106116ce576116ce6132ce565b90506020020160208101906116e39190612faa565b6001600160a01b031681526020810191909152604001600020555b506001016115d1565b5061171f600160008051602061349a83398151915255565b5050565b6002546001600160a01b031633148061174657506000546001600160a01b031633145b6117625760405162461bcd60e51b81526004016106d89061323b565b600a805460ff60401b1916600160401b8315158102919091179182905560ff910416156117c0576040513081527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020015b60405180910390a150565b6040513081527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020016117b5565b50565b600a54600160401b900460ff161561181d5760405162461bcd60e51b81526004016106d890613193565b611825611c45565b6000836001600160a01b031663565a2e2c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611865573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611889919061333a565b9050336001600160a01b038216146118d55760405162461bcd60e51b815260206004820152600f60248201526e6e6f742062656e656669636961727960881b60448201526064016106d8565b60005b82811015611a1d576001600160a01b03851660009081526006602052604081208186868581811061190b5761190b6132ce565b90506020020160208101906119209190612faa565b6001600160a01b0316815260208101919091526040016000205490508015611a14576000858584818110611956576119566132ce565b905060200201602081019061196b9190612faa565b6001600160a01b031603611988576119838382612aa7565b6119b9565b6119b985858481811061199d5761199d6132ce565b90506020020160208101906119b29190612faa565b8483612b45565b6001600160a01b0386166000908152600660205260408120818787868181106119e4576119e46132ce565b90506020020160208101906119f99190612faa565b6001600160a01b031681526020810191909152604001600020555b506001016118d8565b5050611a36600160008051602061349a83398151915255565b505050565b6001546001600160a01b03163314611a885760405162461bcd60e51b815260206004820152601060248201526f37b7363ca832b73234b733a7bbb732b960811b60448201526064016106d8565b6000546001546040517f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236492611acb926001600160a01b0391821692911690613281565b60405180910390a1600154600080546001600160a01b0319166001600160a01b03909216918217815560405190917fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91611b2791908490613281565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611b7b5760405162461bcd60e51b81526004016106d89061325e565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611bc75760405162461bcd60e51b81526004016106d89061325e565b6001546040517fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b91611b27916001600160a01b03909116908490613281565b611c0e611c45565b6000611c1b89898961261f565b9050611c2d8982898989898989610ab7565b50610b71600160008051602061349a83398151915255565b60008051602061349a833981519152805460011901611c7757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6001600160a01b0384166000908152600560209081526040808320868452909152812081908190819062015180611cb48888613357565b611cbf906001613376565b6001600160401b03168260010154611cd79190613395565b611ce191906133ac565b600954909550620186a090611cf69087613395565b611d0091906133ac565b9250620186a06001600160401b0316896001600160a01b031663820bdcdc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d719190613222565b611d7b9087613395565b611d8591906133ac565b915081611d9284876131e0565b611d9c91906131e0565b6001600160a01b03808b1660009081526006602090815260408083208654909416835292905290812080549296508492909190611dda9084906131cd565b909155505080546001600160a01b031660009081526007602052604081208054859290611e089084906131cd565b909155505080546001600160a01b0316611ef75784341015611e645760405162461bcd60e51b81526020600482015260156024820152740e0c2f2dacadce840d2e640dcdee840cadcdeeaced605b1b60448201526064016106d8565b6040516331a9108f60e11b815260048101899052611ed7906001600160a01b038b1690636352211e90602401602060405180830381865afa158015611ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed1919061333a565b85612aa7565b84341115611ef257611ef233611eed87346131e0565b612aa7565b6120b9565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f639190613222565b8254909150611f7d906001600160a01b0316333089612ba4565b81546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611fc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe99190613222565b905080611ff688846131cd565b1461203c5760405162461bcd60e51b815260206004820152601660248201527506e6f7420737570706f7274206275726e2045524332360541b60448201526064016106d8565b82546040516331a9108f60e11b8152600481018c90526120b6916001600160a01b0390811691908e1690636352211e90602401602060405180830381865afa15801561208c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b0919061333a565b88612b45565b50505b50945094509450949050565b600160008051602061349a83398151915255565b6120e4338a8a6128d3565b42876001600160401b0316116121315760405162461bcd60e51b8152602060048201526012602482015271696e76616c6964206d6178456e6454696d6560701b60448201526064016106d8565b886001600160a01b031663b49a2db96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561216f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612193919061329b565b6001600160401b0316866001600160401b031611156121f45760405162461bcd60e51b815260206004820152601760248201527f4572726f723a6d696e4475726174696f6e203e206d617800000000000000000060448201526064016106d8565b6040516301ffc9a760e01b815263c91f0c5360e01b60048201526001600160a01b038a16906301ffc9a790602401602060405180830381865afa15801561223f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226391906133ce565b61229b5760405162461bcd60e51b81526020600482015260096024820152681b9bdd08191bd3919560ba1b60448201526064016106d8565b60405163e42e66a960e01b815260048101899052600060248201819052906001600160a01b038b169063e42e66a990604401606060405180830381865afa1580156122ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230e91906133eb565b92505050806001600160401b0316886001600160401b03161115612330578097505b600a54612346906001600160401b0316426131cd565b886001600160401b0316111561236f57600a5461236c906001600160401b031642613376565b97505b6040516331a9108f60e11b8152600481018a90526000906001600160a01b038c1690636352211e90602401602060405180830381865afa1580156123b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123db919061333a565b90506000600360008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c81526020019081526020016000209050818160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a8160020181905550898160030160006101000a8154816001600160401b0302191690836001600160401b03160217905550888160030160086101000a8154816001600160401b0302191690836001600160401b031602179055508b6001600160a01b0316633d46b8198c6040518263ffffffff1660e01b81526004016124f291815260200190565b602060405180830381865afa15801561250f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612533919061329b565b6003820180546fffffffffffffffffffffffffffffffff16600160c01b6001600160401b039384160267ffffffffffffffff60801b191617600160801b42939093169290920291909117905560048101805487919060ff191660018360028111156125a0576125a0612e5f565b021790555060048101805486919061ff0019166101008380156125c5576125c5612e5f565b02179055507faeb169383f2ae7c2482351835d026f1a393e148c3a1b5398c1655bc120cfc16f828d8d8d8d8d8d8b8e6040516126099998979695949392919061342f565b60405180910390a1505050505050505050505050565b600080846001600160a01b03166325cb25b06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612660573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612684919061333a565b6040516301ffc9a760e01b815263b72080fb60e01b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156126d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f691906133ce565b15612810576000816001600160a01b031663cab416b46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561273b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275f919061333a565b90506000826001600160a01b0316826001600160a01b0316636352211e886040518263ffffffff1660e01b815260040161279b91815260200190565b602060405180830381865afa1580156127b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127dc919061333a565b6001600160a01b031614905080156127fe576127f93384886128d3565b612809565b6128093383886128d3565b505061281b565b61281b3382866128d3565b42836001600160401b0316116128685760405162461bcd60e51b8152602060048201526012602482015271696e76616c6964206d6178456e6454696d6560701b60448201526064016106d8565b604051630a6cc26560e41b8152600481018590526001600160a01b0386169063a6cc2650906024016020604051808303816000875af11580156128af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190613222565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e90602401602060405180830381865afa15801561291b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061293f919061333a565b9050806001600160a01b0316846001600160a01b031614806129d5575060405163020604bf60e21b8152600481018390526001600160a01b03808616919085169063081812fc90602401602060405180830381865afa1580156129a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ca919061333a565b6001600160a01b0316145b80612a4a575060405163e985e9c560e01b81526001600160a01b0384169063e985e9c590612a099084908890600401613281565b602060405180830381865afa158015612a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4a91906133ce565b612a8f5760405162461bcd60e51b815260206004820152601660248201527537b7363c9030b8383937bb32b21037b91037bbb732b960511b60448201526064016106d8565b50505050565b612a9d612bdd565b612aa5612c26565b565b80471015612ad15760405163cf47918160e01b8152476004820152602481018290526044016106d8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b1e576040519150601f19603f3d011682016040523d82523d6000602084013e612b23565b606091505b5050905080611a365760405163d6bda27560e01b815260040160405180910390fd5b6040516001600160a01b03838116602483015260448201839052611a3691859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612c2e565b6040516001600160a01b038481166024830152838116604483015260648201839052612a8f9186918216906323b872dd90608401612b72565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16612aa557604051631afcd79f60e31b815260040160405180910390fd5b6120c5612bdd565b600080602060008451602086016000885af180612c51576040513d6000823e3d81fd5b50506000513d91508115612c69578060011415612c76565b6001600160a01b0384163b155b15612a8f57604051635274afe760e01b81526001600160a01b03851660048201526024016106d8565b6001600160a01b03811681146117f057600080fd5b6001600160401b03811681146117f057600080fd5b600080600080600060a08688031215612ce157600080fd5b8535612cec81612c9f565b945060208601359350604086013592506060860135612d0a81612cb4565b91506080860135612d1a81612c9f565b809150509295509295909350565b600080600080600080600080610100898b031215612d4557600080fd5b8835612d5081612c9f565b9750602089013596506040890135612d6781612cb4565b95506060890135612d7781612cb4565b94506080890135935060a0890135612d8e81612c9f565b925060c0890135612d9e81612c9f565b915060e089013560038110612db257600080fd5b809150509295985092959890939650565b60008060008060008060c08789031215612ddc57600080fd5b8635612de781612c9f565b9550602087013594506040870135612dfe81612cb4565b93506060870135612e0e81612cb4565b92506080870135915060a0870135612e2581612c9f565b809150509295509295509295565b60008060408385031215612e4657600080fd5b8235612e5181612c9f565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60038110612e8557612e85612e5f565b9052565b60018110612e8557612e85612e5f565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151610120830191612edf908401826001600160401b03169052565b506080830151612efa60808401826001600160401b03169052565b5060a0830151612f1560a08401826001600160401b03169052565b5060c0830151612f3060c08401826001600160401b03169052565b5060e0830151612f4360e0840182612e75565b506101008301516114e7610100840182612e89565b60008060408385031215612f6b57600080fd5b8235612f7681612c9f565b91506020830135612f8681612c9f565b809150509250929050565b600060208284031215612fa357600080fd5b5035919050565b600060208284031215612fbc57600080fd5b8135612fc781612c9f565b9392505050565b60008083601f840112612fe057600080fd5b5081356001600160401b03811115612ff757600080fd5b6020830191508360208260051b850101111561301257600080fd5b9250929050565b6000806020838503121561302c57600080fd5b82356001600160401b0381111561304257600080fd5b61304e85828601612fce565b90969095509350505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b828110156130eb57868503603f190184528151805180875260005b818110156130b95760208184018101518983018201520161309d565b506000602082890101526020601f19601f83011688010196505050602082019150602084019350600181019050613082565b50929695505050505050565b60006020828403121561310957600080fd5b8135612fc781612cb4565b80151581146117f057600080fd5b60006020828403121561313457600080fd5b8135612fc781613114565b60008060006040848603121561315457600080fd5b833561315f81612c9f565b925060208401356001600160401b0381111561317a57600080fd5b61318686828701612fce565b9497909650939450505050565b6020808252600a908201526969732070617573696e6760b01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cc057610cc06131b7565b81810381811115610cc057610cc06131b7565b6000806040838503121561320657600080fd5b825161321181612cb4565b6020840151909250612f8681612cb4565b60006020828403121561323457600080fd5b5051919050565b60208082526009908201526837b7363ca0b236b4b760b91b604082015260600190565b60208082526009908201526837b7363ca7bbb732b960b91b604082015260600190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156132ad57600080fd5b8151612fc781612cb4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126132fb57600080fd5b8301803591506001600160401b0382111561331557600080fd5b60200191503681900382131561301257600080fd5b8183823760009101908152919050565b60006020828403121561334c57600080fd5b8151612fc781612c9f565b6001600160401b038281168282160390811115610cc057610cc06131b7565b6001600160401b038181168382160190811115610cc057610cc06131b7565b8082028115828204841417610cc057610cc06131b7565b6000826133c957634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156133e057600080fd5b8151612fc781613114565b60008060006060848603121561340057600080fd5b8351602085015190935061341381612cb4565b604085015190925061342481612cb4565b809150509250925092565b6001600160a01b038a811682528981166020830152604082018990526001600160401b0388811660608401528716608083015260a0820186905284811660c0830152831660e0820152610120810161348b610100830184612e75565b9a995050505050505050505056fe9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220d0f3f641492a3c8fb6a09e6c4dcade06dcc8ce44cca100df5f7d1624bdf2105464736f6c634300081c0033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
