/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IDCL, IDCLInterface } from "../../../contracts/dcl/IDCL";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "setUpdateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDCL__factory {
  static readonly abi = _abi;
  static createInterface(): IDCLInterface {
    return new Interface(_abi) as IDCLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IDCL {
    return new Contract(address, _abi, runner) as unknown as IDCL;
  }
}
